@import "reset.css";
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300..800&display=swap');

:root {
    --primary: #6C63FF;
    --gray-light: #CDCDCD;
    --gray-dark: #252525;
    --purple-soft: #C3C1E5;
}

body {
    font-family: 'Open Sans', sans-serif;
    font-size: 1.125rem; /* 18px */
    color: var(--gray-dark);
}

.app {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

[class*='__container'] {
    max-width: 750px;
    margin-inline: auto;
    overflow: clip;
}

/* --- HEADER --- */
.header {
    height: 80px;
    display: grid;
    place-items: center;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);
}

.logo {
    font-size: 1.5rem; /* 24px */
}

/* --- MAIN --- */
.page {
    flex: auto;
}

.page__container {
    padding-block: 42px;
    display: flex;
    flex-direction: column;
    row-gap: 32px;
}

.tools {
    display: flex;
    align-items: center;
    column-gap: 32px;
}

.tools__note-title {
    flex: auto;
}

.notes {
    display: flex;
    flex-direction: column;
    row-gap: 16px;
}

.notes__note:not(:last-child) {
    border-bottom: 1px solid var(--primary);
}

.note {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-block: 16px;

    font-size: 20px;
    font-weight: 500;

    transition: opacity 0.3s ease, transform 0.3s ease;
}

.note.removing {
    opacity: 0;
    transform: translateX(30px);
}

.note.done {
    text-decoration: line-through;
    color: var(--gray-light);
}

.note:not(:last-child) {
    border-bottom: 1px solid var(--gray-light);
}

.note__title {
    display: flex;
    align-items: center;
    column-gap: 8px;
}

.note__action {
    width: 32px;
    height: 32px;
    display: grid;
    place-items: center;
    line-height: 1;
    border-radius: 4px;
}

.note__action img {
    width: 24px;
    height: 24px;
}

.note__action:hover {
    background-color: #f6f6f6;
}

.note__action:active {
    background-color: #eee;
}

.empty {
    font-size: 20px;
    text-align: center;
    color: #6C757D;
}

/* --- COMPONENTS --- */
.input {
    width: 100%;
    padding-block: 12px;
    padding-inline: 16px;
    border: 1px solid var(--primary);
    border-radius: 4px;
    outline: none;
}

.input::placeholder {
    color: var(--purple-soft);
}

.button {
    cursor: pointer;
    padding: 10px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    outline: none;
    border: none;

    background-color: var(--primary);
    color: #fff;
    font-weight: 500;
    border-radius: 4px;

    transition: background-color .3s ease-in-out;
}

.button:hover {
    background-color: #7d76ff;
}

.button_outline {
    background-color: transparent;
    color: var(--primary);
    border: var(--primary) solid 1px;
}

.button_outline:hover {
    background-color: transparent;
    color: #5c55e8;
}

.modal {
    padding: 18px 30px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 500px;
    border: none;
    border-radius: 16px;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);
}

.modal::backdrop {
    background-color: rgba(0, 0, 0, 0.25);
}

.modal__title {
    margin: 0;
    font-size: 1.5rem; /* 24px */
    font-weight: 500;
    text-transform: uppercase;
    text-align: center;
    margin-block-end: 24px;
}

.error {
    font-size: 14px;
    color: #d62828;
}

.checkbox {
    position: relative;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    gap: 8px;
    user-select: none;
}

.checkbox input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

.checkmark {
    width: 20px;
    height: 20px;
    display: grid;
    place-items: center;

    background-color: #fff;
    border: 1px solid var(--primary);
    border-radius: 2px;
    transition: background-color 0.2s, border-color 0.2s;
}

.checkmark::after {
    content: '';
    width: 100%;
    height: 100%;
    opacity: 0;

    background: url('../assets/icons/checked.svg') no-repeat center 1px;
    background-size: 14px;
    transition: opacity 0.2s;
}

.checkbox input:checked + .checkmark {
    background-color: var(--primary);
}

.checkbox input:checked + .checkmark::after {
    opacity: 1;
}
